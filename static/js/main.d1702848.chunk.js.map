{"version":3,"sources":["api/api.js","api/user.js","api/todos.js","components/TodoApp/TodoApp.jsx","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodoFooter/TodoFooter.jsx","App.js","index.js"],"names":["BASE_URL","a","fetch","method","body","JSON","stringify","name","username","email","phone","user","json","response","data","result","userId","todos","filterTodosById","filter","todo","sort","curr","next","id","deleteTodo","todoId","completed","TodoApp","handleInput","useState","value","setValue","onSubmit","e","preventDefault","handleSubmit","type","className","placeholder","onChange","target","TodoItem","title","upDateUserTodos","handleCompleted","changeCompletedTodoFalse","then","changeCompletedTodoTrue","classNames","checked","onClick","handleDeleteItem","TodoList","htmlFor","map","key","TodoFooter","currentFilter","deleteAllTodos","getCurrentFilter","length","href","selected","deleteTodos","Promise","all","App","setUserId","setTodos","setCurrentFilter","getId","localStorage","getItem","getTodos","todosUpdate","useEffect","createUser","setItem","addTodo","filteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1702848.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport async function createUser() {\n  const user = await fetch(`${BASE_URL}/users/`, {\n    method: 'POST',\n    body: JSON.stringify({\n      name: 'Alex',\n      username: 'Ivannikov',\n      email: 'alexii.ivannikov@gmail.com',\n      phone: '344556677',\n    }),\n  });\n\n  const response = await user.json();\n  const result = await response.data;\n\n  return result;\n}\n\nexport async function getUsers() {\n  const response = await fetch(`${BASE_URL}/users/`);\n  const result = await response.json();\n  const users = await result.data;\n\n  return users;\n}\n\nexport async function getUser(userId) {\n  const response = await fetch(`${BASE_URL}/users/${userId}`);\n  const result = await response.json();\n  const usersId = await result.data;\n\n  return usersId;\n}\n","import { BASE_URL } from './api';\n\nexport async function getTodos(userId) {\n  const response = await fetch(`${BASE_URL}/todos/`);\n  const result = await response.json();\n  const todos = await result.data;\n\n  const filterTodosById = todos\n    .filter(todo => todo.userId === +userId)\n    .sort((curr, next) => curr.id - next.id);\n\n  return filterTodosById;\n}\n\nexport function addTodo(title, userId) {\n  return fetch(`${BASE_URL}/todos`, {\n    method: 'POST',\n    body: JSON.stringify({\n      title,\n      userId,\n      completed: false,\n    }),\n  });\n}\n\nexport function deleteTodo(todoId) {\n  return fetch(`${BASE_URL}/todos/${todoId}`, {\n    method: 'DELETE',\n  });\n}\n\nexport async function changeCompletedTodoTrue(todoId) {\n  const response = await fetch(`${BASE_URL}/todos/${todoId}`, {\n    method: 'PATCH',\n    body: JSON.stringify({\n      completed: true,\n    }),\n  });\n\n  return response;\n}\n\nexport async function changeCompletedTodoFalse(todoId) {\n  const response = await fetch(`${BASE_URL}/todos/${todoId}`, {\n    method: 'PATCH',\n    body: JSON.stringify({\n      completed: false,\n    }),\n  });\n\n  return response;\n}\n\nexport async function filterActiveTodos() {\n  const response = await fetch(`${BASE_URL}/todos/`);\n  const result = await response.json();\n  const todos = await result.data;\n  const filterByCompleted = todos\n    .filter(todo => todo.userId === 158 && !todo.completed);\n\n  return filterByCompleted;\n}\n","import React, { useState } from 'react';\n\nexport function TodoApp ({ handleInput}) {\n  const [value, setValue] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    handleInput(e, value);\n    setValue('');\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </form>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { deleteTodo } from '../../api/todos';\nimport { changeCompletedTodoFalse, changeCompletedTodoTrue } from '../../api/todos';\n\nexport function TodoItem({ title, completed, id, upDateUserTodos }) {\n\n  function handleCompleted(e) {\n    if (completed) {\n      changeCompletedTodoFalse(id)\n        .then(() => upDateUserTodos());\n\n    } else {\n      changeCompletedTodoTrue(id)\n        .then(() => upDateUserTodos());\n    }\n  }\n\n  function handleDeleteItem(id) {\n    deleteTodo(id)\n      .then(() => upDateUserTodos())\n  }\n\n  return (\n    <li>\n      <div className={classNames(\"view\", {\"completed\": completed})}>\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={(e) => handleCompleted(e)}\n        />\n        <label>{ title }</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => handleDeleteItem(id)}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n}\n","import React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport function TodoList({ todos, upDateUserTodos }) {\n  return (\n    <>\n      <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {\n          todos.map(todo => (\n            <TodoItem \n              key={todo.id}\n              {...todo}\n              upDateUserTodos={upDateUserTodos}\n            />\n          ))\n        }\n      </ul>\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport { deleteTodo } from '../../api/todos';\nimport classNames from 'classnames';\n\nexport function TodoFooter({ todos, deleteAllTodos, currentFilter, upDateUserTodos, getCurrentFilter }) {\n  // const [clearCompleted, setClearCompleted] = useState(false);\n\n  function deleteAllTodos() {\n    const allCompleted = todos.filter(todo => todo.completed);\n    const deleteTodos = allCompleted.map(todo => deleteTodo(todo.id));\n\n    Promise.all(deleteTodos)\n      .then(() => upDateUserTodos());\n  }\n  return (\n    <>\n      <span className=\"todo-count\">\n        {`${todos.length} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={classNames({ selected: currentFilter === 'all'})}\n            onClick={() => getCurrentFilter(\"all\")}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={classNames({ selected: currentFilter === 'active'})}\n            onClick={() => getCurrentFilter(\"active\")}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={classNames({ selected: currentFilter === 'completed'})}\n            onClick={() => getCurrentFilter(\"completed\")}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {\n        // clearCompleted  &&\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={deleteAllTodos}\n        >\n          Clear completed\n        </button>\n      }\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { createUser } from './api/user';\nimport { getTodos, addTodo } from './api/todos';\n\nimport { TodoApp } from './components/TodoApp/TodoApp';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { TodoFooter } from './components/TodoFooter/TodoFooter';\n\nfunction App() {\n  const [userId, setUserId] = useState(null);\n  const [todos, setTodos] = useState([]);\n  // const [user, setUser] = useState(null);\n  const [currentFilter, setCurrentFilter] = useState('all');\n  const getId = localStorage.getItem('id');\n\n  function upDateUserTodos() {\n    getTodos(userId)\n      .then(todosUpdate => setTodos(todosUpdate));\n  }\n\n  function handleInput(e, value) {\n    e.preventDefault();\n\n    addTodo(value, userId)\n      .then(() => upDateUserTodos());\n  }\n\n  function filteredTodos() {\n    switch (currentFilter) {\n      case 'all': {\n        return todos;\n      }\n\n      case 'active': {\n        return todos.filter(todo => !todo.completed);\n      }\n\n      case 'completed': {\n        return todos.filter(todo => todo.completed);\n      }\n\n      default: {\n        return todos;\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (getId) {\n      setUserId(getId);\n    } else {\n      createUser()\n        .then(({ id }) => {\n          setUserId(id);\n          localStorage.setItem('id', id);\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userId) {\n      // getUser(userId)\n      //   .then(user => setUser(user));\n      upDateUserTodos();\n    }\n  }, [userId]);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoApp\n          handleInput={handleInput}\n        />\n      </header>\n\n      <section className=\"main\">\n        <TodoList\n          todos={filteredTodos()}\n          upDateUserTodos={upDateUserTodos}\n        />\n      </section>\n\n      <footer className=\"footer\">\n        <TodoFooter\n          todos={todos}\n          upDateUserTodos={upDateUserTodos}\n          getCurrentFilter={filter => setCurrentFilter(filter)}\n          currentFilter={currentFilter}\n        />\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}